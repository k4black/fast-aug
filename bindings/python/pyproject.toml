[build-system]
requires = ["maturin>=1.7,<2.0"]
build-backend = "maturin"

[tool.maturin]
#python-source = "python"
#module-name = "pydantic_core._pydantic_core"
bindings = 'pyo3'
features = ["pyo3/extension-module"]


# maturin will use Cargo.toml metadata if not specified
# pyproject.toml takes precedence over Cargo.toml
[project]
name = "fast-aug"
description = "Fast nlp augmentation library with rust backend"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "Development Status :: 3 - Alpha",
    "Programming Language :: Rust",
]
dynamic = [
    'license',
    'readme',
    'version'
]
dependencies = []

[project.urls]
Homepage = "https://github.com/k4black/fast-aug"

[project.optional-dependencies]
test = [
    "pytest >=8.0.0,<9.0.0",
    "black ==24.10.0",
    "mypy >=1.0.0",
    "ruff ==0.9.3",
    "isort ==5.13.2",
    "maturin >=1.7,<2.0",
    "pytest-benchmark[histogram] >=4.0.0,<6.0.0",
    "pytest-examples ==0.0.13",
]
compare = [
    "pytest >=8.0.0,<9.0.0",
    "pytest-benchmark[histogram] >=4.0.0,<6.0.0",
    "pandas >=2.0.0,<3.0.0",
    "Pyarrow >=16.1.0,<20.0.0",  # for pandas
    "seaborn >=0.10.0,<1.0.0",
    "psutil >=6.0.0,<7.0.0",
    "tqdm >=4.0.0,<5.0.0",
    "nlpaug ==1.1.11",
    "fasttextaug ==0.1.1",
    #"augmenty ==1.4.3",  # too slow
    #"augly[text] ==1.0.0",  # build on top of nlpug
]


[tool.pytest.ini_options]
minversion = "8.0"
testpaths = "tests"
python_files = "test_*.py bench_*.py"

[tool.ruff]
target-version = "py312"
line-length = 120

[tool.ruff.lint]
# Enable the pycodestyle (`E`) and Pyflakes (`F`) rules by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
extend-select = ["E", "F", "Q", "RUF100", "C90", "I"]
isort = {known-first-party = ['fast_aug', 'tests', 'common'], lines-after-imports = 2}
ignore = []

[tool.isort]
profile = "black"
known_first_party = ["fast_aug", "tests", "common"]
lines_after_imports = 2
line_length = 120

[tool.black]
line-length = 120
target-version = ["py312"]

[tool.mypy]
no_incremental = true
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_any_generics = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
allow_untyped_decorators = true
exclude = [
    "fast_aug/",  # enable when return type annotation will be added
    # "tests/",
    ".tmp/",
    ".venv/"
]
